/*Utilities*/

/**
 * Display-type utilities
 */

.u-block {
  display: block !important;
}

.u-hidden {
  display: none !important;
}

/**
 * Completely remove from the flow but leave available to screen readers.
 */

.u-hiddenVisually {
  position: absolute !important;
  overflow: hidden !important;
  width: 1px !important;
  height: 1px !important;
  padding: 0 !important;
  border: 0 !important;
  clip: rect(1px, 1px, 1px, 1px) !important;
}

.u-inline {
  display: inline !important;
}

/**
 * 1. Fix for Firefox bug: an image styled `max-width:100%` within an
 * inline-block will display at its default size, and not limit its width to
 * 100% of an ancestral container.
 */

.u-inlineBlock {
  display: inline-block !important;
  max-width: 100%;
  /* 1 */
}

.u-table {
  display: table !important;
}

.u-tableCell {
  display: table-cell !important;
}

.u-tableRow {
  display: table-row !important;
}

.u-posAbsolute {
  position: absolute !important;
}

/**
 * Pins to all corners by default. But when a width and/or height are
 * provided, the element will be centered in its nearest relatively-positioned
 * ancestor.
 */

.u-posAbsoluteCenter {
  bottom: 0 !important;
  left: 0 !important;
  margin: auto !important;
  position: absolute !important;
  right: 0 !important;
  top: 0 !important;
}

/**
 * 1. Make sure fixed elements are promoted into a new layer, for performance
 *    reasons.
 */

.u-posFixed {
  position: fixed !important;
  -webkit-backface-visibility: hidden;
          backface-visibility: hidden;
  /* 1 */
}

.u-posRelative {
  position: relative !important;
}

.u-posStatic {
  position: static !important;
}

/**
 * Sizing utilities
 */

/* Intrinsic widths
   ========================================================================== */

/**
 * Make an element shrink wrap its content.
 */

.u-sizeFit,
.u-sizeFitAlt {
  display: block !important;
  float: left !important;
  width: auto !important;
}

.u-sizeFitAlt {
  float: right !important;
}

/**
 * Make an element fill the remaining space.
 * N.B. This will hide overflow.
 */

.u-sizeFill {
  display: block !important;
  overflow: hidden !important;
  width: auto !important;
}

/**
 * An alternative method to make an element fill the remaining space.
 * N.B. Do not use if child elements might be wider than the remaining space.
 * In Chrome, Safari, and Firefox it results in undesired layout.
 */

.u-sizeFillAlt {
  display: table-cell !important;
  max-width: 100% !important;
  width: 10000px !important;
}

/**
 * Make an element the width of its parent.
 */

.u-sizeFull {
  box-sizing: border-box !important;
  display: block !important;
  width: 100% !important;
}

/* Proportional widths
   ========================================================================== */

/**
 * Specify the proportional width of an object.
 * Intentional redundancy build into each set of unit classes.
 * Supports: 2, 3, 4, 5, 6, 8, 10, 12 part
 */

.u-size1of12 {
  width: 8.333333333333332% !important;
}

.u-size1of10 {
  width: 10% !important;
}

.u-size1of8 {
  width: 12.5% !important;
}

.u-size1of6,
.u-size2of12 {
  width: 16.666666666666664% !important;
}

.u-size1of5,
.u-size2of10 {
  width: 20% !important;
}

.u-size1of4,
.u-size2of8,
.u-size3of12 {
  width: 25% !important;
}

.u-size3of10 {
  width: 30% !important;
}

.u-size1of3,
.u-size2of6,
.u-size4of12 {
  width: 33.33333333333333% !important;
}

.u-size3of8 {
  width: 37.5% !important;
}

.u-size2of5,
.u-size4of10 {
  width: 40% !important;
}

.u-size5of12 {
  width: 41.66666666666667% !important;
}

.u-size1of2,
.u-size2of4,
.u-size3of6,
.u-size4of8,
.u-size5of10,
.u-size6of12 {
  width: 50% !important;
}

.u-size7of12 {
  width: 58.333333333333336% !important;
}

.u-size3of5,
.u-size6of10 {
  width: 60% !important;
}

.u-size5of8 {
  width: 62.5% !important;
}

.u-size2of3,
.u-size4of6,
.u-size8of12 {
  width: 66.66666666666666% !important;
}

.u-size7of10 {
  width: 70% !important;
}

.u-size3of4,
.u-size6of8,
.u-size9of12 {
  width: 75% !important;
}

.u-size4of5,
.u-size8of10 {
  width: 80% !important;
}

.u-size5of6,
.u-size10of12 {
  width: 83.33333333333334% !important;
}

.u-size7of8 {
  width: 87.5% !important;
}

.u-size9of10 {
  width: 90% !important;
}

.u-size11of12 {
  width: 91.66666666666666% !important;
}

/**
 * Size: breakpoint 1 (small)
 */

@media (min-width:0) and (max-width:639px) {
  /**
   * Make an element shrink wrap its content.
   */

  .u-sm-sizeFit,
  .u-sm-sizeFitAlt {
    display: block !important;
    float: left !important;
    width: auto !important;
  }

  .u-sm-sizeFitAlt {
    float: right !important;
  }

  /**
   * Make an element fill the remaining space.
   * N.B. This will hide overflow.
   */

  .u-sm-sizeFill {
    display: block !important;
    overflow: hidden !important;
    width: auto !important;
  }

  /**
   * An alternative method to make an element fill the remaining space.
   * N.B. Do not use if child elements might be wider than the remaining space.
   * In Chrome, Safari, and Firefox it results in undesired layout.
   */

  .u-sm-sizeFillAlt {
    display: table-cell !important;
    max-width: 100% !important;
    width: 10000px !important;
  }

  /**
   * Make an element the width of its parent.
   */

  .u-sm-sizeFull {
    box-sizing: border-box !important;
    display: block !important;
    width: 100% !important;
  }

  /* Proportional widths: breakpoint 1 (small)
     ========================================================================== */

  /**
   * Specify the proportional width of an object.
   * Intentional redundancy build into each set of unit classes.
   * Supports: 2, 3, 4, 5, 6, 8, 10, 12 part
   */

  .u-sm-size1of12 {
    width: 8.333333333333332% !important;
  }

  .u-sm-size1of10 {
    width: 10% !important;
  }

  .u-sm-size1of8 {
    width: 12.5% !important;
  }

  .u-sm-size1of6,
  .u-sm-size2of12 {
    width: 16.666666666666664% !important;
  }

  .u-sm-size1of5,
  .u-sm-size2of10 {
    width: 20% !important;
  }

  .u-sm-size1of4,
  .u-sm-size2of8,
  .u-sm-size3of12 {
    width: 25% !important;
  }

  .u-sm-size3of10 {
    width: 30% !important;
  }

  .u-sm-size1of3,
  .u-sm-size2of6,
  .u-sm-size4of12 {
    width: 33.33333333333333% !important;
  }

  .u-sm-size3of8 {
    width: 37.5% !important;
  }

  .u-sm-size2of5,
  .u-sm-size4of10 {
    width: 40% !important;
  }

  .u-sm-size5of12 {
    width: 41.66666666666667% !important;
  }

  .u-sm-size1of2,
  .u-sm-size2of4,
  .u-sm-size3of6,
  .u-sm-size4of8,
  .u-sm-size5of10,
  .u-sm-size6of12 {
    width: 50% !important;
  }

  .u-sm-size7of12 {
    width: 58.333333333333336% !important;
  }

  .u-sm-size3of5,
  .u-sm-size6of10 {
    width: 60% !important;
  }

  .u-sm-size5of8 {
    width: 62.5% !important;
  }

  .u-sm-size2of3,
  .u-sm-size4of6,
  .u-sm-size8of12 {
    width: 66.66666666666666% !important;
  }

  .u-sm-size7of10 {
    width: 70% !important;
  }

  .u-sm-size3of4,
  .u-sm-size6of8,
  .u-sm-size9of12 {
    width: 75% !important;
  }

  .u-sm-size4of5,
  .u-sm-size8of10 {
    width: 80% !important;
  }

  .u-sm-size5of6,
  .u-sm-size10of12 {
    width: 83.33333333333334% !important;
  }

  .u-sm-size7of8 {
    width: 87.5% !important;
  }

  .u-sm-size9of10 {
    width: 90% !important;
  }

  .u-sm-size11of12 {
    width: 91.66666666666666% !important;
  }
}

/**
 * Size: breakpoint 2 (medium)
 */

@media (min-width:640px) and (max-width:959px) {
  /**
   * Make an element shrink wrap its content.
   */

  .u-md-sizeFit,
  .u-md-sizeFitAlt {
    display: block !important;
    float: left !important;
    width: auto !important;
  }

  .u-md-sizeFitAlt {
    float: right !important;
  }

  /**
   * Make an element fill the remaining space.
   * N.B. This will hide overflow.
   */

  .u-md-sizeFill {
    display: block !important;
    overflow: hidden !important;
    width: auto !important;
  }

  /**
   * An alternative method to make an element fill the remaining space.
   * N.B. Do not use if child elements might be wider than the remaining space.
   * In Chrome, Safari, and Firefox it results in undesired layout.
   */

  .u-md-sizeFillAlt {
    display: table-cell !important;
    max-width: 100% !important;
    width: 10000px !important;
  }

  /**
   * Make an element the width of its parent.
   */

  .u-md-sizeFull {
    box-sizing: border-box !important;
    display: block !important;
    width: 100% !important;
  }

  /* Proportional widths: breakpoint 2 (medium)
     ========================================================================== */

  /**
   * Specify the proportional width of an object.
   * Intentional redundancy build into each set of unit classes.
   * Supports: 2, 3, 4, 5, 6, 8, 10, 12 part
   */

  .u-md-size1of12 {
    width: 8.333333333333332% !important;
  }

  .u-md-size1of10 {
    width: 10% !important;
  }

  .u-md-size1of8 {
    width: 12.5% !important;
  }

  .u-md-size1of6,
  .u-md-size2of12 {
    width: 16.666666666666664% !important;
  }

  .u-md-size1of5,
  .u-md-size2of10 {
    width: 20% !important;
  }

  .u-md-size1of4,
  .u-md-size2of8,
  .u-md-size3of12 {
    width: 25% !important;
  }

  .u-md-size3of10 {
    width: 30% !important;
  }

  .u-md-size1of3,
  .u-md-size2of6,
  .u-md-size4of12 {
    width: 33.33333333333333% !important;
  }

  .u-md-size3of8 {
    width: 37.5% !important;
  }

  .u-md-size2of5,
  .u-md-size4of10 {
    width: 40% !important;
  }

  .u-md-size5of12 {
    width: 41.66666666666667% !important;
  }

  .u-md-size1of2,
  .u-md-size2of4,
  .u-md-size3of6,
  .u-md-size4of8,
  .u-md-size5of10,
  .u-md-size6of12 {
    width: 50% !important;
  }

  .u-md-size7of12 {
    width: 58.333333333333336% !important;
  }

  .u-md-size3of5,
  .u-md-size6of10 {
    width: 60% !important;
  }

  .u-md-size5of8 {
    width: 62.5% !important;
  }

  .u-md-size2of3,
  .u-md-size4of6,
  .u-md-size8of12 {
    width: 66.66666666666666% !important;
  }

  .u-md-size7of10 {
    width: 70% !important;
  }

  .u-md-size3of4,
  .u-md-size6of8,
  .u-md-size9of12 {
    width: 75% !important;
  }

  .u-md-size4of5,
  .u-md-size8of10 {
    width: 80% !important;
  }

  .u-md-size5of6,
  .u-md-size10of12 {
    width: 83.33333333333334% !important;
  }

  .u-md-size7of8 {
    width: 87.5% !important;
  }

  .u-md-size9of10 {
    width: 90% !important;
  }

  .u-md-size11of12 {
    width: 91.66666666666666% !important;
  }
}

/**
 * Size: breakpoint 3 (large)
 */

@media (min-width:960px) {
  /**
   * Make an element shrink wrap its content.
   */

  .u-lg-sizeFit,
  .u-lg-sizeFitAlt {
    display: block !important;
    float: left !important;
    width: auto !important;
  }

  .u-lg-sizeFitAlt {
    float: right !important;
  }

  /**
   * Make an element fill the remaining space.
   * N.B. This will hide overflow.
   */

  .u-lg-sizeFill {
    display: block !important;
    overflow: hidden !important;
    width: auto !important;
  }

  /**
   * An alternative method to make an element fill the remaining space.
   * N.B. Do not use if child elements might be wider than the remaining space.
   * In Chrome, Safari, and Firefox it results in undesired layout.
   */

  .u-lg-sizeFillAlt {
    display: table-cell !important;
    max-width: 100% !important;
    width: 10000px !important;
  }

  /**
   * Make an element the width of its parent.
   */

  .u-lg-sizeFull {
    box-sizing: border-box !important;
    display: block !important;
    width: 100% !important;
  }

  /* Proportional widths: breakpoint 3 (large)
     ========================================================================== */

  /**
   * Specify the proportional width of an object.
   * Intentional redundancy build into each set of unit classes.
   * Supports: 2, 3, 4, 5, 6, 8, 10, 12 part
   */

  .u-lg-size1of12 {
    width: 8.333333333333332% !important;
  }

  .u-lg-size1of10 {
    width: 10% !important;
  }

  .u-lg-size1of8 {
    width: 12.5% !important;
  }

  .u-lg-size1of6,
  .u-lg-size2of12 {
    width: 16.666666666666664% !important;
  }

  .u-lg-size1of5,
  .u-lg-size2of10 {
    width: 20% !important;
  }

  .u-lg-size1of4,
  .u-lg-size2of8,
  .u-lg-size3of12 {
    width: 25% !important;
  }

  .u-lg-size3of10 {
    width: 30% !important;
  }

  .u-lg-size1of3,
  .u-lg-size2of6,
  .u-lg-size4of12 {
    width: 33.33333333333333% !important;
  }

  .u-lg-size3of8 {
    width: 37.5% !important;
  }

  .u-lg-size2of5,
  .u-lg-size4of10 {
    width: 40% !important;
  }

  .u-lg-size5of12 {
    width: 41.66666666666667% !important;
  }

  .u-lg-size1of2,
  .u-lg-size2of4,
  .u-lg-size3of6,
  .u-lg-size4of8,
  .u-lg-size5of10,
  .u-lg-size6of12 {
    width: 50% !important;
  }

  .u-lg-size7of12 {
    width: 58.333333333333336% !important;
  }

  .u-lg-size3of5,
  .u-lg-size6of10 {
    width: 60% !important;
  }

  .u-lg-size5of8 {
    width: 62.5% !important;
  }

  .u-lg-size2of3,
  .u-lg-size4of6,
  .u-lg-size8of12 {
    width: 66.66666666666666% !important;
  }

  .u-lg-size7of10 {
    width: 70% !important;
  }

  .u-lg-size3of4,
  .u-lg-size6of8,
  .u-lg-size9of12 {
    width: 75% !important;
  }

  .u-lg-size4of5,
  .u-lg-size8of10 {
    width: 80% !important;
  }

  .u-lg-size5of6,
  .u-lg-size10of12 {
    width: 83.33333333333334% !important;
  }

  .u-lg-size7of8 {
    width: 87.5% !important;
  }

  .u-lg-size9of10 {
    width: 90% !important;
  }

  .u-lg-size11of12 {
    width: 91.66666666666666% !important;
  }
}

/**
 * Vertical alignment utilities
 * Depends on an appropriate `display` value.
 */

.u-alignBaseline {
  vertical-align: baseline !important;
}

.u-alignBottom {
  vertical-align: bottom !important;
}

.u-alignMiddle {
  vertical-align: middle !important;
}

.u-alignTop {
  vertical-align: top !important;
}

.u-listUnstyled {
  list-style-type: none !important;
  margin-left: 0 !important;
}

.u-listInline,
.u-listInline li {
  display: inline-block;
}

/** @define u-space; use strict */



.u-sMA1 {
  margin: 1.65rem !important;
}

.u-sMV1 {
  margin-top: 1.65rem !important;
  margin-bottom: 1.65rem !important;
}

.u-sMV2 {
  margin-top: 3.3rem !important;
  margin-bottom: 3.3rem !important;
}

.u-sMH1 {
  margin-left: 1.65rem !important;
  margin-right: 1.65rem !important;
}

.u-sMTH {
  margin-top: 0.825rem !important;
}

.u-sMT1 {
  margin-top: 1.65rem !important;
}

.u-sMBH {
  margin-bottom: 0.825rem !important;
}

.u-sMB1 {
  margin-bottom: 1.65rem !important;
}

.u-sMB2 {
  margin-bottom: 3.3rem !important;
}

.u-sPA1 {
  padding: 1.65rem !important;
}

.u-sPAH {
  padding: 0.825rem !important;
}

.u-sPHH {
  padding-left: 0.825rem !important;
  padding-right: 0.825rem !important;
}

.u-sPLH {
  padding-left: 0.825rem !important;
}

.u-sPLQ {
  padding-left: 0.4125rem !important;
}

.u-sPH1 {
  padding-left: 1.65rem !important;
  padding-right: 1.65rem !important;
}

.u-sPV1 {
  padding-top: 1.65rem !important;
  padding-bottom: 1.65rem !important;
}

.u-sPV2 {
  padding-top: 3.3rem !important;
  padding-bottom: 3.3rem !important;
}

.u-sPT2 {
  padding-top: 3.3rem !important;
}

/**
 * Word breaking
 *
 * Break strings when their length exceeds the width of their container.
 */

.u-textBreak {
  word-wrap: break-word !important;
}

/**
 * Horizontal text alignment
 */

.u-textCenter {
  text-align: center !important;
}

.u-textLeft {
  text-align: left !important;
}

.u-textRight {
  text-align: right !important;
}

/**
 * Inherit the ancestor's text color.
 */

.u-textInheritColor {
  color: inherit !important;
}

/**
 * Enables font kerning in all browsers.
 * http://blog.typekit.com/2014/02/05/kerning-on-the-web/
 *
 * 1. Chrome (not Windows), Firefox, Safari 6+, iOS, Android
 * 2. Chrome (not Windows), Firefox, IE 10+
 * 3. Safari 7 and future browsers
 */

.u-textKern {
  text-rendering: optimizeLegibility;
  /* 1 */
  -webkit-font-feature-settings: "kern" 1;
     -moz-font-feature-settings: "kern" 1;
          font-feature-settings: "kern" 1;
  /* 2 */
  -webkit-font-kerning: normal;
     -moz-font-kerning: normal;
          font-kerning: normal;
  /* 3 */
}

/**
 * Prevent whitespace wrapping
 */

.u-textNoWrap {
  white-space: nowrap !important;
}

/**
 * Text truncation
 *
 * Prevent text from wrapping onto multiple lines, and truncate with an
 * ellipsis.
 *
 * 1. Ensure that the node has a maximum width after which truncation can
 *    occur.
 * 2. Fix for IE 8/9 if `word-wrap: break-word` is in effect on ancestor
 *    nodes.
 */

.u-textTruncate {
  max-width: 100%;
  /* 1 */
  overflow: hidden !important;
  text-overflow: ellipsis !important;
  white-space: nowrap !important;
  word-wrap: normal !important;
  /* 2 */
}

.u-textLead {
  font-size: 1.25em;
}

.u-textMeta {
  font-size: .8em;
  opacity: .6;
  font-family: 'brandon-grotesque', sans-serif;
}

.u-textSmall {
  font-size: .8em;
}

/**
 * Contain floats
 *
 * Make an element expand to contain floated children.
 * Uses pseudo-elements (micro clearfix).
 *
 * 1. The space content is one way to avoid an Opera bug when the
 *    `contenteditable` attribute is included anywhere else in the document.
 *    Otherwise it causes space to appear at the top and bottom of the
 *    element.
 * 2. The use of `table` rather than `block` is only necessary if using
 *    `:before` to contain the top-margins of child elements.
 */

.u-cf:before,
.u-cf:after {
  content: " ";
  /* 1 */
  display: table;
  /* 2 */
}

.u-cf:after {
  clear: both;
}

/**
 * New block formatting context
 *
 * This affords some useful properties to the element. It won't wrap under
 * floats. Will also contain any floated children.

 * N.B. This will clip overflow. Use the alternative method below if this is
 * problematic.
 */

.u-nbfc {
  overflow: hidden !important;
}

/**
 * New block formatting context (alternative)
 *
 * Alternative method when overflow must not be clipped.
 *
 * 1. Create a new block formatting context (NBFC).
 * 2. Avoid shrink-wrap behaviour of table-cell.
 *
 * N.B. This breaks down in some browsers when elements within this element
 * exceed its width.
 */

.u-nbfcAlt {
  display: table-cell !important;
  /* 1 */
  width: 10000px !important;
  /* 2 */
}

/**
 * Floats
 */

.u-floatLeft {
  float: left !important;
}

.u-floatRight {
  float: right !important;
}

.u-lRestrict {
  max-width: 50em;
  margin-left: auto;
  margin-right: auto;
}

.u-lRestrictRead {
  max-width: 34em;
  margin-left: auto;
  margin-right: auto;
}

.u-lRound {
  border-radius: 1000px;
}

@media (min-width:640px) {
  .u-lRestrictRead {
    padding-left: 1.65rem;
    padding-right: 1.65rem;
  }
}

/** @define u-background; use strict */

.u-bgLightest {
  background-color: #ffffff;
}

/*Components*/

/*! normalize.css v3.0.1 | MIT License | git.io/normalize */

/**
 * 1. Set default font family to sans-serif.
 * 2. Prevent iOS text size adjust after orientation change, without disabling
 *    user zoom.
 */

html {
  font-family: sans-serif;
  /* 1 */
  -ms-text-size-adjust: 100%;
  /* 2 */
  -webkit-text-size-adjust: 100%;
  /* 2 */
}

/**
 * Remove default margin.
 */

body {
  margin: 0;
}

/* HTML5 display definitions
   ========================================================================== */

/**
 * Correct `block` display not defined for any HTML5 element in IE 8/9.
 * Correct `block` display not defined for `details` or `summary` in IE 10/11 and Firefox.
 * Correct `block` display not defined for `main` in IE 11.
 */

article,
aside,
details,
figcaption,
figure,
footer,
header,
hgroup,
main,
nav,
section,
summary {
  display: block;
}

/**
 * 1. Correct `inline-block` display not defined in IE 8/9.
 * 2. Normalize vertical alignment of `progress` in Chrome, Firefox, and Opera.
 */

audio,
canvas,
progress,
video {
  display: inline-block;
  /* 1 */
  vertical-align: baseline;
  /* 2 */
}

/**
 * Prevent modern browsers from displaying `audio` without controls.
 * Remove excess height in iOS 5 devices.
 */

audio:not([controls]) {
  display: none;
  height: 0;
}

/**
 * Address `[hidden]` styling not present in IE 8/9/10.
 * Hide the `template` element in IE 8/9/11, Safari, and Firefox < 22.
 */

[hidden],
template {
  display: none;
}

/* Links
   ========================================================================== */

/**
 * Remove the gray background color from active links in IE 10.
 */

a {
  background: transparent;
}

/**
 * Improve readability when focused and also mouse hovered in all browsers.
 */

a:active,
a:hover {
  outline: 0;
}

/* Text-level semantics
   ========================================================================== */

/**
 * Address styling not present in IE 8/9/10/11, Safari, and Chrome.
 */

abbr[title] {
  border-bottom: 1px dotted;
}

/**
 * Address style set to `bolder` in Firefox 4+, Safari, and Chrome.
 */

b,
strong {
  font-weight: bold;
}

/**
 * Address styling not present in Safari and Chrome.
 */

dfn {
  font-style: italic;
}

/**
 * Address variable `h1` font-size and margin within `section` and `article`
 * contexts in Firefox 4+, Safari, and Chrome.
 */

h1 {
  font-size: 2em;
  margin: 0.67em 0;
}

/**
 * Address styling not present in IE 8/9.
 */

mark {
  background: #ff0;
  color: #000;
}

/**
 * Address inconsistent and variable font size in all browsers.
 */

small {
  font-size: 80%;
}

/**
 * Prevent `sub` and `sup` affecting `line-height` in all browsers.
 */

sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}

sup {
  top: -0.5em;
}

sub {
  bottom: -0.25em;
}

/* Embedded content
   ========================================================================== */

/**
 * Remove border when inside `a` element in IE 8/9/10.
 */

img {
  border: 0;
}

/**
 * Correct overflow not hidden in IE 9/10/11.
 */

svg:not(:root) {
  overflow: hidden;
}

/* Grouping content
   ========================================================================== */

/**
 * Address margin not present in IE 8/9 and Safari.
 */

figure {
  margin: 1em 40px;
}

/**
 * Address differences between Firefox and other browsers.
 */

hr {
  box-sizing: content-box;
  height: 0;
}

/**
 * Contain overflow in all browsers.
 */

pre {
  overflow: auto;
}

/**
 * Address odd `em`-unit font size rendering in all browsers.
 */

code,
kbd,
pre,
samp {
  font-family: monospace, monospace;
  font-size: 1em;
}

/* Forms
   ========================================================================== */

/**
 * Known limitation: by default, Chrome and Safari on OS X allow very limited
 * styling of `select`, unless a `border` property is set.
 */

/**
 * 1. Correct color not being inherited.
 *    Known issue: affects color of disabled elements.
 * 2. Correct font properties not being inherited.
 * 3. Address margins set differently in Firefox 4+, Safari, and Chrome.
 */

button,
input,
optgroup,
select,
textarea {
  color: inherit;
  /* 1 */
  font: inherit;
  /* 2 */
  margin: 0;
  /* 3 */
}

/**
 * Address `overflow` set to `hidden` in IE 8/9/10/11.
 */

button {
  overflow: visible;
}

/**
 * Address inconsistent `text-transform` inheritance for `button` and `select`.
 * All other form control elements do not inherit `text-transform` values.
 * Correct `button` style inheritance in Firefox, IE 8/9/10/11, and Opera.
 * Correct `select` style inheritance in Firefox.
 */

button,
select {
  text-transform: none;
}

/**
 * 1. Avoid the WebKit bug in Android 4.0.* where (2) destroys native `audio`
 *    and `video` controls.
 * 2. Correct inability to style clickable `input` types in iOS.
 * 3. Improve usability and consistency of cursor style between image-type
 *    `input` and others.
 */

button,
html input[type="button"],
input[type="reset"],
input[type="submit"] {
  -webkit-appearance: button;
  /* 2 */
  cursor: pointer;
  /* 3 */
}

/**
 * Re-set default cursor for disabled elements.
 */

button[disabled],
html input[disabled] {
  cursor: default;
}

/**
 * Remove inner padding and border in Firefox 4+.
 */

button::-moz-focus-inner,
input::-moz-focus-inner {
  border: 0;
  padding: 0;
}

/**
 * Address Firefox 4+ setting `line-height` on `input` using `!important` in
 * the UA stylesheet.
 */

input {
  line-height: normal;
}

/**
 * It's recommended that you don't attempt to style these elements.
 * Firefox's implementation doesn't respect box-sizing, padding, or width.
 *
 * 1. Address box sizing set to `content-box` in IE 8/9/10.
 * 2. Remove excess padding in IE 8/9/10.
 */

input[type="checkbox"],
input[type="radio"] {
  box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */
}

/**
 * Fix the cursor style for Chrome's increment/decrement buttons. For certain
 * `font-size` values of the `input`, it causes the cursor style of the
 * decrement button to change from `default` to `text`.
 */

input[type="number"]::-webkit-inner-spin-button,
input[type="number"]::-webkit-outer-spin-button {
  height: auto;
}

/**
 * 1. Address `appearance` set to `searchfield` in Safari and Chrome.
 * 2. Address `box-sizing` set to `border-box` in Safari and Chrome
 *    (include `-moz` to future-proof).
 */

input[type="search"] {
  -webkit-appearance: textfield;
  /* 1 */
  /* 2 */
  box-sizing: content-box;
}

/**
 * Remove inner padding and search cancel button in Safari and Chrome on OS X.
 * Safari (but not Chrome) clips the cancel button when the search input has
 * padding (and `textfield` appearance).
 */

input[type="search"]::-webkit-search-cancel-button,
input[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none;
}

/**
 * Define consistent border, margin, and padding.
 */

fieldset {
  border: 1px solid #c0c0c0;
  margin: 0 2px;
  padding: 0.35em 0.625em 0.75em;
}

/**
 * 1. Correct `color` not being inherited in IE 8/9/10/11.
 * 2. Remove padding so people aren't caught out if they zero out fieldsets.
 */

legend {
  border: 0;
  /* 1 */
  padding: 0;
  /* 2 */
}

/**
 * Remove default vertical scrollbar in IE 8/9/10/11.
 */

textarea {
  overflow: auto;
}

/**
 * Don't inherit the `font-weight` (applied by a rule above).
 * NOTE: the default cannot safely be changed in Chrome and Safari on OS X.
 */

optgroup {
  font-weight: bold;
}

/* Tables
   ========================================================================== */

/**
 * Remove most spacing between table cells.
 */

table {
  border-collapse: collapse;
  border-spacing: 0;
}

td,
th {
  padding: 0;
}



/**
 * A thin layer on top of normalize.css that provides a starting point more
 * suitable for web applications. Removes the default spacing and border for
 * appropriate elements.
 */

html {
  background: #fff;
  color: #292f33;
  font: 1.125rem/1.65 'jubilat', serif;
}

a {
  color: #444;
  text-decoration: none;
}

a:hover,
a:focus,
a:active {
  color: #292f33;
  text-decoration: underline;
}

blockquote,
dl,
dd,
h1,
h2,
h3,
h4,
h5,
h6,
figure,
p,
pre {
  margin: 0;
}

button {
  background: transparent;
  border: 0;
  padding: 0;
}

/**
 * Work around a Firefox/IE bug where the transparent `button` background
 * results in a loss of the default `button` focus styles.
 */

button:focus {
  outline: 1px dotted;
  outline: 5px auto -webkit-focus-ring-color;
}

fieldset {
  border: 0;
  margin: 0;
  padding: 0;
}

iframe {
  border: 0;
}

ol,
ul {
  list-style: none;
  margin: 0;
  padding: 0;
}

/**
 * Suppress the focus outline on links that cannot be accessed via keyboard.
 * This prevents an unwanted focus outline from appearing around elements that
 * might still respond to pointer events.
 */

[tabindex="-1"]:focus {
  outline: none !important;
}

/** @define Grid; use strict */



/**
 * Core grid component
 *
 * DO NOT apply dimension or offset utilities to the `Grid` element. All cell
 * widths and offsets should be applied to child grid cells.
 */

/* Grid container
   ========================================================================== */

/**
 * All content must be contained within child `Grid-cell` elements.
 *
 * 1. Account for browser defaults of elements that might be the root node of
 *    the component.
 * 2. Remove inter-cell whitespace that appears between `inline-block` child
 *    elements.
 * 3. Ensure consistent default alignment.
 */

.Grid {
  display: block;
  /* 1 */
  font-size: 0;
  /* 2 */
  margin: 0;
  /* 1 */
  padding: 0;
  /* 1 */
  text-align: left;
  /* 3 */
}

/**
 * Modifier: center align all grid cells
 */

.Grid--alignCenter {
  text-align: center;
}

/**
 * Modifier: right align all grid cells
 */

.Grid--alignRight {
  text-align: right;
}

/**
 * Modifier: middle-align grid cells
 */

.Grid--alignMiddle > .Grid-cell {
  vertical-align: middle;
}

/**
 * Modifier: bottom-align grid cells
 */

.Grid--alignBottom > .Grid-cell {
  vertical-align: bottom;
}

/**
 * Modifier: gutters
 *
 * NOTE: this can trigger a horizontal scrollbar if the component is as wide as
 * the viewport. Use padding on a container, or `overflow-x:hidden` to protect
 * against it.
 */

.Grid--withGutter {
  margin: 0 -1.2374999999999998rem;
}

.Grid--withGutter > .Grid-cell {
  padding: 0 1.2374999999999998rem;
}

/* Grid cell
   ========================================================================== */

/**
 * No explicit width by default. Rely on combining `Grid-cell` with a dimension
 * utility or a component class that extends 'grid'.
 *
 * 1. Fundamentals of the non-float grid layout.
 * 2. Reset font size change made in `Grid`.
 * 3. Keeps content correctly aligned with the grid direction.
 * 4. Controls vertical positioning of units.
 * 5. Make cells full-width by default.
 */

.Grid-cell {
  box-sizing: border-box;
  display: inline-block;
  /* 1 */
  font-size: 1rem;
  /* 2 */
  margin: 0;
  padding: 0;
  text-align: left;
  /* 3 */
  vertical-align: top;
  /* 4 */
  width: 100%;
  /* 5 */
}

/**
 * Modifier: horizontally center one unit
 * Set a specific unit to be horizontally centered. Doesn't affect
 * any other units. Can still contain a child `Grid` object.
 */

.Grid-cell--center {
  display: block;
  margin: 0 auto;
}

/** @define Base; use strict */



html,
body {
  height: 100%;
  overflow-x: hidden;
  --webkit-overflow-scrolling: touch;
}

html {
  box-sizing: border-box;
  -webkit-transition: opacity .25s ease-out;
          transition: opacity .25s ease-out;
  font-size: 1.125rem;
}

*,
*:before,
*:after {
  box-sizing: inherit;
}

body {
  min-width: 320px;
  font-weight: 300;
}

h1,
h2,
h3,
h4,
h5,
h6 {
  font-family: 'brandon-grotesque', sans-serif;
  font-weight: 300;
  text-transform: uppercase;
  line-height: 1.1;
}

strong {
  font-weight: 400;
}

a:hover {
  text-decoration: none;
}

small {
  line-height: 1.3;
}

img,
svg {
  max-width: 100%;
}

svg {
  max-height: 100%;
}

hr {
  height: 1px;
  border: none;
  border-bottom: 1px solid #ddd;
  margin: 3.3rem 0;
}

input,
button,
textarea {
  -webkit-appearance: none;
  border-radius: 0;
}

@media (min-width:640px) {
  html {
    font-size: 1.25rem;
  }
}

@media (min-width:960px) {
  html {
    font-size: 1.375rem;
  }
}

/** @define Header; use strict */



.Header {
  display: block;
  z-index: 100;
  background: #ffffff;
  width: 100%;
  -webkit-transition: -webkit-transform .5s ease-out;
          transition: transform .5s ease-out;
}

.Header-container {
  position: relative;
  height: 100%;
}

.Header-child {
  min-height: 100%;
}

@media (min-width:0) and (max-width:639px) {
  .Header {
    min-width: 320px;
    box-shadow: 0 0 5px rgba(0,0,0,.05);
    position: fixed;
    top: 0;
    left: 0;
    right: 0;
  }

  .Header.is-unavailable {
    -webkit-transform: translateY(-52px);
        -ms-transform: translateY(-52px);
            transform: translateY(-52px);
  }

  .Header-child {
    padding-top: 52px;
  }
}

@media (min-width:640px) {
  .Header {
    position: fixed;
    padding-top: 0.6187499999999999rem;
    top: 0;
    left: 0;
    height: 100%;
    width: 4.949999999999999rem;
    border-right: 1px solid #eeeeee;
    background: #ffffff;
  }

  .Header-child {
    margin-left: 4.949999999999999rem;
    position: relative;
  }
}

/** @define Home; use strict */

.Home {
  background: #eee url('images/Home-bg-sm.jpg');
  background-size: cover;
  background-position: center center;
  text-align: center;
}

.Home-logo {
  max-width: 5em;
  background: -webkit-radial-gradient(center, ellipse, rgba(255,255,255,0.4) 0%, rgba(255,255,255,0.4) 60%, rgba(255,255,255,0) 70%);
  background: radial-gradient(ellipse at center, rgba(255,255,255,0.4) 0%, rgba(255,255,255,0.4) 60%, rgba(255,255,255,0) 70%);
  padding-bottom: 1.65rem;
}

.Home-cta {
  position: absolute;
  bottom: 10vmin;
  left: 0;
  right: 0;
}

.Home-ctaButton {
  display: inline-block;
  background: rgba(255, 255, 255, 0.75);
  border-radius: 100px;
  font-weight: 400;
  padding: 0.4125rem 1.2374999999999998rem;
  font-family: 'brandon-grotesque', sans-serif;
  -webkit-transition: all .25s ease-out;
          transition: all .25s ease-out;
}

.Home-ctaButton:hover {
  background: #ffffff;
  -webkit-transform: scale(1.1, 1.1);
      -ms-transform: scale(1.1, 1.1);
          transform: scale(1.1, 1.1);
}

@media (min-width:640px) {
  .Home {
    background-image: url('images/Home-bg.jpg');
  }

  .Home-logo {
    margin-top: 0.825rem;
  }

  .Home-ctaButton {
    font-size: 1.40625rem;
  }
}

/** @define Nav; use strict */



.Nav {
  font-family: 'brandon-grotesque', sans-serif;
}

.Nav-item {
  font-weight: 400;
  text-align: center;
  font-size: .6666rem;
  text-align: center;
}

.Nav-link {
  display: inline-block;
  color: #aaaaaa;
  line-height: 1;
  width: 2.8888rem;
  height: 2.8888rem;
  padding: 0.3611rem;
  -webkit-transition: all .25s ease-out;
          transition: all .25s ease-out;
}

.Nav-link.is-active {
  color: #292f33;
}

.Nav-icon {
  display: inline-block;
  height: 70%;
}

.Nav-iconTitle {
  height: 2.8888rem;
}

.Nav-text {
  display: block;
  line-height: 1;
}

@media (min-width:0) and (max-width:639px) {
  .Nav {
    margin: 0 auto;
    font-size: 0;
    /*Remove space from inline-block*/
  }

  .Nav-item {
    display: inline-block;
    width: 20%;
  }
}

@media (min-width:640px) {
  .Nav-link {
    width: 4.949999999999999rem;
    height: 4.949999999999999rem;
    padding: 0.6187499999999999rem;
  }

  .Nav-link:hover {
    -webkit-transform: scale3d(1.1, 1.1, 1);
            transform: scale3d(1.1, 1.1, 1);
  }
}

@media (min-width:960px) {
  .Nav-link {
    width: 4.949999999999999rem;
    height: 4.949999999999999rem;
    padding: 0.6187499999999999rem;
  }
}

.Prose {
  margin-left: auto;
  margin-right: auto;
}

.Prose h1 {
  font-size: 2.4em;
}

.Prose h2 {
  font-size: 1.8em;
}

.Prose h3 {
  font-size: 1.5em;
}

.Prose p a,
.Prose li a {
  opacity: .9;
  background-image: -webkit-linear-gradient(top, rgba(0,0,0,0) 70%, rgba(0,0,0,.7) 70%);
  background-image: linear-gradient(to bottom, rgba(0,0,0,0) 70%, rgba(0,0,0,.7) 70%);
  background-repeat: repeat-x;
  background-size: 2px 2px;
  background-position: left bottom;
}

.Prose p {
  margin-bottom: 1.65rem;
}

.Prose p:last-child {
  margin-bottom: 0;
}

.Prose ul {
  list-style-type: disc;
  margin-left: 1.65rem;
}

@media (min-width:0) and (max-width:639px) {
  .Prose h1 {
    font-size: 2em;
  }

  .Prose h2 {
    font-size: 1.6em;
  }

  .Prose h3 {
    font-size: 1.3em;
  }
}

.breadcrumb {
  font-family: 'brandon-grotesque', sans-serif;
  text-transform: uppercase;
  opacity: .6;
}

.breadcrumb:hover,
.breadcrumb:focus {
  opacity: 1;
}

.Pricing {
  /*Quick clearfix*/
  overflow: hidden;
  position: relative;
}

.Pricing:before {
  position: absolute;
  width: 100%;
  bottom: .5em;
  left: 0;
  content: '';
  border-bottom: 1px dashed #ccc;
}

.Pricing-title,
.Pricing-price {
  position: relative;
  z-index: 1;
  display: inline-block;
  background-color: #fff;
}

.Pricing-title {
  padding-right: .2em;
}

.Pricing-price {
  float: right;
  padding-left: .2em;
}

/** @define Icon; use strict */

.Icon {
  fill: currentColor;
}

.Icon-stroked {
  fill: none;
  stroke: currentColor;
  stroke-width: 3;
}



.Link--box {
  margin-left: -0.825rem;
  margin-right: -0.825rem;
  padding: 0.825rem;
  -webkit-transition: all .25s ease-out;
          transition: all .25s ease-out;
}

.Link--box:hover,
.Link--box:focus {
  background-color: rgba(0,0,0,0.05);
}

.Link--unstyled {
  background: none !important;
}



.Form-label {
  font-family: 'brandon-grotesque', sans-serif;
  font-size: 1em;
  text-transform: uppercase;
}

.Form-input {
  padding: 0.4125rem;
  -webkit-transition: all .25s ease-out;
          transition: all .25s ease-out;
  border: 1px solid #ddd;
  box-shadow: none;
}

.Form-input:hover {
  border-color: #bbb;
}

.Form-input:focus {
  border-color: #292f33;
  outline: none;
}

.Form-input.is-error {
  border-color: #c00;
}

.Form-radioInput {
  opacity: 0;
}

.Form-radioLabel {
  position: relative;
  padding-top: 0.20625rem;
  padding-bottom: 0.20625rem;
  padding-left: 1.85625rem;
  cursor: pointer;
  -webkit-transition: all .25s ease-out;
          transition: all .25s ease-out;
  color: #999;
}

.Form-radioLabel:hover {
  color: #777;
}

.Form-radioInput:focus ~ .Form-radioLabel:after {
  position: absolute;
  top: 0;
  right: -0.6187499999999999rem;
  left: -0.6187499999999999rem;
  box-sizing: content-box;
  width: 100%;
  height: 98%;
  padding-right: 0.6187499999999999rem;
  padding-left: 0.6187499999999999rem;
  content: '';
  border: 1px dashed #bbb;
  border-radius: 1.2374999999999998rem;
}

.Form-radioLabel:before {
  position: absolute;
  top: 0.4125rem;
  left: 0;
  width: 1.2374999999999998rem;
  height: 1.2374999999999998rem;
  content: '';
  -webkit-transition: all .25s ease-out;
          transition: all .25s ease-out;
  border: 1px solid #ddd;
  border-radius: 1.65rem;
  background-color: #f5f8fa;
  box-shadow: inset 0 0 0 0.28874999999999995rem #f5f8fa;
}

.Form-radioLabel:hover:before,
.Form-radioInput:focus ~ .Form-radioLabel:before {
  border-color: #bbb;
  background-color: #bbb;
}

.Form-radioInput:checked ~ .Form-radioLabel {
  color: #292f33;
}

.Form-radioInput:checked ~ .Form-radioLabel:before {
  background-color: #292f33;
  box-shadow: inset 0 0 0 0.28874999999999995rem #f5f8fa;
}

.Form-fields {
  -webkit-transition: all .25s ease-out;
          transition: all .25s ease-out;
}

.Form-fields.is-sending {
  opacity: .3;
}

.Form-fields.is-sending .Form-input,
.Form-fields.is-sending .Form-radioLabel,
.Form-fields.is-sending .Form-radioInput {
  pointer-events: none;
}

.Form-error {
  color: #c00;
}

.Form-response {
  position: absolute;
  right: 0;
  bottom: 100%;
  left: 0;
  visibility: hidden;
  margin-bottom: 0.825rem;
  -webkit-transition: all .25s ease-out;
          transition: all .25s ease-out;
  -webkit-transform: translateY(40%);
      -ms-transform: translateY(40%);
          transform: translateY(40%);
  opacity: 0;
  color: #292f33;
  background-color: #f5f8fa;
  box-shadow: 0 0 1.65rem rgba(0,0,0,.3);
}

.Form-response:after {
  position: absolute;
  bottom: -0.4125rem;
  left: 50%;
  width: 0.825rem;
  height: 0.825rem;
  margin-left: -0.4125rem;
  content: '';
  -webkit-transform: rotate(45deg);
      -ms-transform: rotate(45deg);
          transform: rotate(45deg);
  background-color: #f5f8fa;
}

.Form-response.is-active {
  visibility: visible;
  -webkit-transform: translateY(0);
      -ms-transform: translateY(0);
          transform: translateY(0);
  opacity: 1;
}

.Form-responseContainer {
  position: relative;
}

.Form-responseClose {
  font-size: 1.65rem;
  line-height: 1.65rem;
  position: absolute;
  top: 0;
  right: 0;
  width: 1.65rem;
  height: 1.65rem;
  opacity: .5;
}

.Form-responseClose:hover {
  opacity: .9;
}

.Button {
  border: 1px solid #292f33;
  font-family: 'brandon-grotesque', sans-serif;
  padding-left: 0.825rem;
  padding-right: 0.825rem;
  -webkit-transition: all .25s ease-out;
          transition: all .25s ease-out;
}

.Button:hover,
.Button:focus,
.Button:active,
.Button.is-active {
  background-color: #eee;
  outline: none;
}

.Button:active,
.Button.is-active {
  background-color: #292f33;
  color: #f5f8fa;
  border-color: transparent;
}

.Button--large {
  font-size: 1.25em;
}

.Gallery {
  height: 100%;
  margin: -1px;
  /*Hide outer "borders"*/
}

.Gallery-cell {
  -webkit-transition: opacity .4s ease-out,
  -webkit-transform .25s ease-out;
          transition: opacity .4s ease-out,
  transform .25s ease-out;
  -webkit-transform: scale(.25);
      -ms-transform: scale(.25);
          transform: scale(.25);
  opacity: 0;
}

.Gallery-cell.is-loaded {
  -webkit-transform: scale(1);
      -ms-transform: scale(1);
          transform: scale(1);
  opacity: 1;
}

.Gallery-item {
  position: relative;
  display: block;
  overflow: hidden;
  height: 0;
  margin: 1px;
  padding-top: 100%;
  background-color: rgb(240, 240, 240);
}

.Gallery-item:before {
  position: absolute;
  z-index: 1;
  top: 50%;
  left: 50%;
  display: block;
  width: 1.65rem;
  height: 1.65rem;
  margin-top: -0.825rem;
  margin-left: -0.825rem;
  content: '';
  -webkit-animation: loading .9s infinite linear;
          animation: loading .9s infinite linear;
  border-top: 0.20625rem solid rgba(0,0,0,.1);
  border-right: 0.20625rem solid rgba(0,0,0,.1);
  border-bottom: 0.20625rem solid rgba(0,0,0,.1);
  border-left: 0.20625rem solid rgba(0,0,0,.5);
  border-radius: 1.65rem;
}

.Gallery-image {
  position: absolute;
  z-index: 2;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  overflow: auto;
  max-width: none;
  margin: auto;
  -webkit-transition: -webkit-transform .45s ease-out, opacity .75s ease-out;
          transition: transform .45s ease-out, opacity .75s ease-out;
  -webkit-transform: scale(1.1, 1.1);
      -ms-transform: scale(1.1, 1.1);
          transform: scale(1.1, 1.1);
}

.Gallery-image.is-loading {
  -webkit-transform: scale(1, 1);
      -ms-transform: scale(1, 1);
          transform: scale(1, 1);
  opacity: 0;
}

.Gallery-image:hover {
  -webkit-transform: scale(1, 1);
      -ms-transform: scale(1, 1);
          transform: scale(1, 1);
}

.Gallery-image--portrait {
  width: 100%;
}

.Gallery-image--landscape {
  left: 50%;
  height: 100%;
  margin-left: -75%;
}

.Gallery-imageLarge {
  position: absolute;
  z-index: -1;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  max-width: none;
}

.Gallery-imageLarge.is-active {
  z-index: 3;
}

.Social {
  position: relative;
  line-height: 0;
  margin: 0 auto;
}

.Social-link {
  display: inline-block;
  width: 2.0625rem;
  height: 2.0625rem;
  padding: 0.4125rem;
  margin: 0 0.103125rem 0.4125rem;
  opacity: .9;
  color: #f5f8fa !important;
  border-radius: 100%;
  -webkit-transition: all .25s ease-out;
          transition: all .25s ease-out;
  background: #292f33 !important;
}

.Social-link:hover {
  color: #f5f8fa !important;
  opacity: 1;
  -webkit-transform: scale(1.1, 1.1);
      -ms-transform: scale(1.1, 1.1);
          transform: scale(1.1, 1.1);
}

.Social-link--pinterest:hover {
  background: #c92228 !important;
}

.Social-link--instagram:hover {
  background: #4e433c !important;
}

.Social-link--twitter:hover {
  background: #4099ff !important;
}

.Social-link--facebook:hover {
  background: #3b5998 !important;
}

.Social-icon {
  width: 100%;
}

@media (min-width:640px) {
  .Social-link {
    width: 1.85625rem;
    height: 1.85625rem;
    padding: 0.33rem;
  }
}

html.swipebox-html.swipebox-touch {
  overflow: hidden!important;
}

.swipebox-html,
.swipebox-html body {
  overflow: hidden;
}

.Swipebox-overlay {
  width: 100%;
  height: 100%;
  position: fixed;
  top: 0;
  left: 0;
  z-index: 9999 !important;
  overflow: hidden;
  -webkit-user-select: none;
     -moz-user-select: none;
      -ms-user-select: none;
          user-select: none;
  background: rgba(255,255,255,.9);
}

.Swipebox-container {
  position: relative;
  width: 100%;
  height: 100%;
}

.Swipebox-slider {
  -webkit-transition: -webkit-transform 0.4s ease-out;
          transition: transform 0.4s ease-out;
  height: 100%;
  left: 0;
  top: 0;
  width: 100%;
  white-space: nowrap;
  position: absolute;
  display: none;
  cursor: pointer;
}

@media (min-width:640px) {
  .Swipebox-slider {
    /*padding: calc(var(--rhythm) * 1.5) 0;*/
  }
}

.Swipebox-slide {
  height: 100%;
  width: 100%;
  margin-top: -1.65rem;
  line-height: 1px;
  text-align: center;
  display: inline-block;
}

.Swipebox-slide:after {
  content: "";
  display: inline-block;
  height: 50%;
  width: 1px;
  margin-right: -1px;
}

.Swipebox-slide:before {
  display: block;
  content: '';
  position: relative;
  top: 50%;
  left: 50%;
  z-index: 999;
  width: 3.3rem;
  height: 3.3rem;
  border-radius: 1.65rem;
  margin-top: -1.65rem;
  margin-left: -1.65rem;
  border-top: 0.20625rem solid rgba(0,0,0,0.15);
  border-right: 0.20625rem solid rgba(0,0,0,0.15);
  border-bottom: 0.20625rem solid rgba(0,0,0,0.15);
  border-left: 0.20625rem solid rgba(0,0,0,.6);
  -webkit-animation: loading .9s infinite linear;
          animation: loading .9s infinite linear;
}

.Swipebox-slide img {
  position: relative;
  z-index: 1000;
}

@-webkit-keyframes loading {
  0% {
    -webkit-transform: rotate(0deg);
    transform: rotate(0deg);
  }

  100% {
    -webkit-transform: rotate(360deg);
    transform: rotate(360deg);
  }
}

@keyframes loading {
  0% {
    -webkit-transform: rotate(0deg);
    transform: rotate(0deg);
  }

  100% {
    -webkit-transform: rotate(360deg);
    transform: rotate(360deg);
  }
}

.Swipebox-slide img,
.Swipebox-videoContainer {
  display: inline-block;
  max-height: 100%;
  max-width: 100%;
  margin: 0;
  padding: 0;
  width: auto;
  height: auto;
  vertical-align: middle;
}

.Swipebox-videoContainer {
  background: none;
  max-width: 1140px;
  max-height: 100%;
  width: 100%;
  padding: 5%;
  box-sizing: border-box;
}

.Swipebox-video {
  width: 100%;
  height: 0;
  padding-bottom: 56.25%;
  overflow: hidden;
  position: relative;
}

.Swipebox-video iframe {
  width: 100%!important;
  height: 100%!important;
  position: absolute;
  top: 0;
  left: 0;
}

/*.Swipebox-bottomBar,*/

.Swipebox-topBar {
  -webkit-transition: 0.5s;
          transition: 0.5s;
  position: absolute;
  left: 0;
  z-index: 9999;
  width: 100%;
}

/*.Swipebox-bottomBar {
  bottom: 0;
}*/

.Swipebox-bottomBar.is-visible {
  /*transform: translate3d(0,-50px,0);*/
}

.Swipebox-topBar {
  top: 0;
}

.Swipebox-topBar.is-visible {
  /*transform: translate3d(0,50px,0);*/
}

.Swipebox-title {
  display: block;
  width: 100%;
  text-align: center;
}

.Swipebox-prev,
.Swipebox-next,
.Swipebox-close {
  line-height: 2.4749999999999996rem;
  opacity: .4;
  -webkit-transition: all .25s ease-out;
          transition: all .25s ease-out;
  font-family: 'brandon-grotesque', sans-serif;
  background-color: #ffffff;
}

.Swipebox-prev,
.Swipebox-next {
  padding: 1.65rem 0.4125rem;
  font-size: 1.375rem;
  width: 3.3rem;
  height: 4.949999999999999rem;
  position: absolute;
  top: 50%;
  -webkit-transform: translateY(-50%);
      -ms-transform: translateY(-50%);
          transform: translateY(-50%);
}

.Swipebox-close .Icon,
.Swipebox-prev .Icon,
.Swipebox-next .Icon {
  stroke-width: 10;
}

.Swipebox-prev {
  left: 0;
}

.Swipebox-next {
  right: 0;
}

.Swipebox-prev:hover,
.Swipebox-next:hover,
.Swipebox-close:hover {
  opacity: 1;
}

/*.Swipebox-arrows{
  display: block;
  margin: 0 auto;
  width: 100%;
}*/

.Swipebox-close {
  top: 0;
  right: 0;
  position: absolute;
  z-index: 9999;
  padding: 0 0.9899999999999999rem;
  font-size: 3.3rem;
  height: 3.3rem;
  width: 3.3rem;
  line-height: 3.3rem;
}

.Swipebox-noCloseButton .Swipebox-close {
  display: none;
}

.Swipebox-prev.is-disabled {
  opacity: 0.3;
}

.swipebox-no-touch .Swipebox-overlay.is-rightSpring .Swipebox-slider {
  -webkit-animation: rightSpring 0.3s;
          animation: rightSpring 0.3s;
}

.swipebox-no-touch .Swipebox-overlay.is-leftSpring  .Swipebox-slider {
  -webkit-animation: leftSpring 0.3s;
          animation: leftSpring 0.3s;
}

.swipebox-touch .Swipebox-container:before,
.swipebox-touch .Swipebox-container:after {
  -webkit-backface-visibility: hidden;
          backface-visibility: hidden;
  -webkit-transition: all .3s ease;
          transition: all .3s ease;
  content: ' ';
  position: absolute;
  z-index: 999;
  top: 0;
  height: 100%;
  width: 20px;
  opacity: 0;
}

.swipebox-touch .Swipebox-container:before {
  left: 0;
  box-shadow: inset 10px 0px 10px -8px #656565;
}

.swipebox-touch .Swipebox-container:after {
  right: 0;
  box-shadow: inset -10px 0px 10px -8px #656565;
}

.swipebox-touch .Swipebox-overlay.is-leftSpringTouch .Swipebox-container:before {
  opacity: 1;
}

.swipebox-touch .Swipebox-overlay.is-rightSpringTouch .Swipebox-container:after {
  opacity: 1;
}

@-webkit-keyframes rightSpring {
  0% {
    left: 0;
  }

  35% {
    left: -2.4749999999999996rem;
  }

  100% {
    left: 0;
  }
}

@keyframes rightSpring {
  0% {
    left: 0;
  }

  35% {
    left: -2.4749999999999996rem;
  }

  100% {
    left: 0;
  }
}

@-webkit-keyframes leftSpring {
  0% {
    left: 0;
  }

  35% {
    left: 2.4749999999999996rem;
  }

  50% {
    left: 0.825rem;
  }

  100% {
    left: 0;
  }
}

@keyframes leftSpring {
  0% {
    left: 0;
  }

  35% {
    left: 2.4749999999999996rem;
  }

  50% {
    left: 0.825rem;
  }

  100% {
    left: 0;
  }
}

/*Theme*/

/**
* Theme definition
*
* This defines the theme in fundamental terms, but not how it is applied to
* the components. That is done in `theme-map.css`.
*/

/**
* Breakpoints
*/

/**
* Colors
*/

/*Base*/



/*Primary*/



/**
* Fonts
*/



/**
* Vertical Rhythm
*/



/**
 * Map theme variables to component variables
 */

/**
  * Suit Base
  */



/**
  * Suit Grid
  */



/**
  * Base
  */



/**
 * Nav
 */

